Task0.py
--------
O(1): Accessing lists at specific indices should happen in constant time.
--------
Overall: O(1)

===============================================================================================

Task1.py
--------
n: total number of lines in texts and calls combined
O(n): iterating over combined set
--------
Overall: O(n)

===============================================================================================

Task2.py
--------
n: total number of lines in calls
O(n): iterating through calls is O(n) and setting item in dict is O(1) within each iteration
O(n): getting max_call_time because of max() applied to dicionary values
O(n): max_phone_list is generated by for loop in list comprehension
--------
Overall: O(n)

===============================================================================================

Task3.py
--------
n: total number of lines in calls
O(n): iterating through calls. I assume that since numbers are no more than 10-11 characters
      that string and regex operations are approximately constant time. Set addis also
      constant time.
O(n log n): sorting set
O(n): printing prefixes
O(n): iterating through calls to determine fixed to fixed
--------
Overall: O(n log n)

===============================================================================================

Task4.py
--------
n: total number of lines in texts and calls combined
O(n): Iterating through texts
O(n): Iterating through calls
O(n^2): set difference. Technically, this is O(len(s) * len(t)), but since the length of each
        set could be on the order of the total number of texts/calls, this operation could be
        computationally expensive in a worst case scenario
O(n log n): sorting set
O(n): printing actual telemarketers
--------
Overall: O(n^2)